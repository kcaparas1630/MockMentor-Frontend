# Stage 1: Build the application
FROM node:20-alpine AS build
WORKDIR /app

# Accept VITE_ env vars at build time
ARG VITE_FIREBASE_API_KEY
ARG VITE_FIREBASE_AUTH_DOMAIN
ARG VITE_FIREBASE_PROJECT_ID
ARG VITE_FIREBASE_STORAGE_BUCKET
ARG VITE_FIREBASE_MESSAGING_SENDER_ID
ARG VITE_FIREBASE_APP_ID
ARG VITE_AI_SERVICE_URL
ARG VITE_MODE=production

# Copy package files and install dependencies
COPY package*.json ./
RUN npm install

# Copy the rest of the code
COPY . .

# Set build-time environment variables
ENV VITE_FIREBASE_API_KEY=$VITE_FIREBASE_API_KEY \
    VITE_FIREBASE_AUTH_DOMAIN=$VITE_FIREBASE_AUTH_DOMAIN \
    VITE_FIREBASE_PROJECT_ID=$VITE_FIREBASE_PROJECT_ID \
    VITE_FIREBASE_STORAGE_BUCKET=$VITE_FIREBASE_STORAGE_BUCKET \
    VITE_FIREBASE_MESSAGING_SENDER_ID=$VITE_FIREBASE_MESSAGING_SENDER_ID \
    VITE_FIREBASE_APP_ID=$VITE_FIREBASE_APP_ID \
    VITE_AI_SERVICE_URL=$VITE_AI_SERVICE_URL \
    NODE_ENV=production

# Build the app
RUN npm run build -- --mode $VITE_MODE

# Stage 2: Production image
FROM nginx:alpine
WORKDIR /usr/share/nginx/html

# Copy built application
COPY --from=build /app/dist .

# Copy nginx config template to templates directory
COPY nginx.conf.template /etc/nginx/templates/default.conf.template

# Accept runtime environment variables
ARG VITE_AI_SERVICE_URL
ENV VITE_AI_SERVICE_URL=$VITE_AI_SERVICE_URL

EXPOSE 80
CMD ["nginx", "-g", "daemon off;"]
